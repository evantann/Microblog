{{! Partial for a single post }}
<div class="post">
    <div class="post-avatar">
        <!-- the user's avatar -->
        <img src="/avatar/{{username}}" alt="User Avatar">
    </div>
    <div class="post-content preserve-newlines">
        <!-- the post -->
        <p><b>{{username}}</b></p>
        <p>Title: {{title}}</p>
        <p>{{content}}</p>
        <p>Posted by: {{user.username}}</p>
        {{#if video}}
            <video class="aspect-video w-full">
                Your browser does not support the video tag.
            </video>
        {{/if}}
        <div class="post-status-bar">
            <!-- everything that is shown in the status bar -->
            <!-- Heart = ♥ -->
            <!-- font awesome  trashcan = <i class="fas fa-trash-alt"> </i>-->
            <button class="like-button" data-id="{{this.id}}"><span class="like-count">{{likes}}</span> ♥ Like</button>
            <button class="delete-button" data-id="{{this.id}}">
                <i class="fas fa-trash-alt"></i> Delete
            </button>
        </div>        
    </div>
</div>
<script>

    document.addEventListener('DOMContentLoaded', () => {
        const likeButtons = document.querySelectorAll('.like-button');
        likeButtons.forEach(button => {
            button.addEventListener('click', handleLikeClick);
        });

        const deleteButtons = document.querySelectorAll('.delete-button');
        deleteButtons.forEach(button => {
            button.addEventListener('click', handleDeleteClick);
        });
    });

    async function handleLikeClick(event) {
        const postId = event.target.getAttribute('data-id');

        try {
            const response = await fetch(`/like/${postId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                const responseData = await response.json();
                const postLikes = responseData.postLikes;
                const likeCount = event.target.querySelector('.like-count');
                likeCount.textContent = postLikes;
            } else {
                const responseMsg = await response.text();
                console.error(responseMsg);
            }
        } catch (error) {
            console.error('Error liking post:', error)
        }     
    }

    async function handleDeleteClick(event) {
        const buttonElement = event.target.closest('.delete-button'); // closest enures that the button is selected and not <i> when clicked
        const postId = buttonElement.getAttribute('data-id');    
        
        try {
            const response = await fetch(`/delete/${postId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                const postElement = buttonElement.closest('.post');
                postElement.remove();
            } else {
                const responseMsg = await response.text();
                console.error(responseMsg);
            }
        } catch (error) {
            console.error('Error deleting post:', error);
        }
    }

</script>